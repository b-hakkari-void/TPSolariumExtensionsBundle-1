<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="solarium_extensions.annotations_reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
        <parameter key="solarium_extensions.service_manager.class">TP\SolariumExtensionsBundle\Manager\SolariumServiceManager</parameter>
        <parameter key="solarium_extensions.processor.class">TP\SolariumExtensionsBundle\Processor\Processor</parameter>
        <parameter key="solarium_extensions.doctrine_listener.class">TP\SolariumExtensionsBundle\EventListener\DoctrineListener</parameter>
        <parameter key="solarium_extensions.metadata_factory.class">Metadata\MetadataFactory</parameter>
        <parameter key="solarium_extensions.metadata.annotation_driver.class">TP\SolariumExtensionsBundle\Metadata\Driver\AnnotationDriver</parameter>
        <parameter key="solarium_extensions.metadata.cache_class">Metadata\Cache\FileCache</parameter>
    </parameters>

    <services>

        <service id="solarium_extensions.property_accessor"
                 class="Symfony\Component\PropertyAccess\PropertyAccessor"
                 factory-class="Symfony\Component\PropertyAccess\PropertyAccess"
                 factory-method="getPropertyAccessor"
                />

        <service id="solarium_extensions.service_manager" class="%solarium_extensions.service_manager.class%" public="false" />

        <service id="solarium_extensions.annotations_reader" class="%solarium_extensions.annotations_reader.class%" public="false" />

        <service id="solarium_extensions.metadata.annotation_driver" class="%solarium_extensions.metadata.annotation_driver.class%" public="false">
            <argument type="service" id="solarium_extensions.annotations_reader" />
        </service>

        <service id="solarium_extensions.metadata.cache" class="%solarium_extensions.metadata.cache_class%" public="false">
            <argument />
        </service>

        <service id="solarium_extensions.metadata_factory" class="%solarium_extensions.metadata_factory.class%" public="false">
            <argument type="service" id="solarium_extensions.metadata.annotation_driver" />
            <call method="setCache">
                <argument type="service" id="solarium_extensions.metadata.cache" />
            </call>
        </service>

        <service id="solarium_extensions.processor" class="%solarium_extensions.processor.class%">
            <argument type="service" id="solarium_extensions.metadata_factory" />
            <argument type="service" id="solarium_extensions.service_manager" />
            <argument type="service" id="solarium_extensions.property_accessor" />
            <argument type="service" id="solarium_extensions.converter" />
        </service>

        <service id="solarium_extensions.doctrine_listener" class="%solarium_extensions.doctrine_listener.class%">
            <argument type="service" id="solarium_extensions.processor" />
            <tag name="doctrine.event_listener" event="postPersist" method="postPersist"/>
            <tag name="doctrine.event_listener" event="postRemove" method="postRemove"/>
            <tag name="doctrine.event_listener" event="postUpdate" method="postUpdate"/>
            <tag name="kernel.event_listener" event="kernel.terminate" method="onKernelTerminate"/>
        </service>

    </services>
</container>
